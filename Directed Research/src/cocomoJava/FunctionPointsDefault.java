/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cocomoJava;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Sapphire
 */
public class FunctionPointsDefault extends javax.swing.JFrame {
    
    /*
     * Function Points factors for calculation
     */
    public static int[][] fpFactors = { {3, 4, 6}, //Inputs
                                        {4, 5, 7}, //Outputs
                                        {7, 10, 15}, //Files
                                        {5, 7, 10}, //Interfaces
                                        {3, 4, 6}}; //Queries
    
    /*
     * Default Function Points factors for reset
     */
    public static int[][] defaultFpFactors = { {3, 4, 6}, //Inputs
                                        {4, 5, 7}, //Outputs
                                        {7, 10, 15}, //Files
                                        {5, 7, 10}, //Interfaces
                                        {3, 4, 6}}; //Queries
    
    JTextField[][] columns = new JTextField[5][3];
    
    /**
     * Creates new form FunctionPointsDefault
     */
    public FunctionPointsDefault() {
        initComponents();
        this.setTitle("Function Point Factors Default Values");
        this.getContentPane().setBackground(Color.white);
        columns[0][0] = inpL;
        columns[0][1] = inpA;
        columns[0][2] = inpH;
        
        columns[1][0] = outL;
        columns[1][1] = outA;
        columns[1][2] = outH;
        
        columns[2][0] = filL;
        columns[2][1] = filA;
        columns[2][2] = filH;
        
        columns[3][0] = intL;
        columns[3][1] = intA;
        columns[3][2] = intH;
        
        columns[4][0] = queL;
        columns[4][1] = queA;
        columns[4][2] = queH;
        
        setValues();
    }
    
    private void setValues() {
        for(int i=0; i<5; ++i) {
            for (int j = 0; j<3; ++j) {
                columns[i][j].setText(String.valueOf(fpFactors[i][j]));
            }
        }
    }
    
    private void resetValues() {
        for(int i=0; i<5; ++i) {
            for (int j = 0; j<3; ++j) {
                fpFactors[i][j] = defaultFpFactors[i][j];
                columns[i][j].setText(String.valueOf(fpFactors[i][j]));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        inpH = new javax.swing.JTextField();
        inpA = new javax.swing.JTextField();
        inpL = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        outL = new javax.swing.JTextField();
        outA = new javax.swing.JTextField();
        outH = new javax.swing.JTextField();
        filH = new javax.swing.JTextField();
        filA = new javax.swing.JTextField();
        filL = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        intL = new javax.swing.JTextField();
        intA = new javax.swing.JTextField();
        intH = new javax.swing.JTextField();
        queH = new javax.swing.JTextField();
        queA = new javax.swing.JTextField();
        queL = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        SetParameterBtn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel16.setText("Function Type");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel17.setText("Low");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel18.setText("Average");

        jLabel19.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel19.setText("High");

        inpH.setText("0");
        inpH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inpHFocusLost(evt);
            }
        });
        inpH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpHKeyReleased(evt);
            }
        });

        inpA.setText("0");
        inpA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inpAFocusLost(evt);
            }
        });
        inpA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpAKeyReleased(evt);
            }
        });

        inpL.setText("0");
        inpL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inpLFocusLost(evt);
            }
        });
        inpL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpLKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel20.setText("Inputs");

        jLabel21.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel21.setText("Outputs");

        outL.setText("0");
        outL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                outLFocusLost(evt);
            }
        });
        outL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                outLKeyReleased(evt);
            }
        });

        outA.setText("0");
        outA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                outAFocusLost(evt);
            }
        });
        outA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                outAKeyReleased(evt);
            }
        });

        outH.setText("0");
        outH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                outHFocusLost(evt);
            }
        });
        outH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                outHKeyReleased(evt);
            }
        });

        filH.setText("0");
        filH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                filHFocusLost(evt);
            }
        });
        filH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filHKeyReleased(evt);
            }
        });

        filA.setText("0");
        filA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                filAFocusLost(evt);
            }
        });
        filA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filAKeyReleased(evt);
            }
        });

        filL.setText("0");
        filL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                filLFocusLost(evt);
            }
        });
        filL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filLKeyReleased(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel22.setText("Files");

        jLabel23.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel23.setText("Interfaces");

        intL.setText("0");
        intL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                intLFocusLost(evt);
            }
        });
        intL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                intLKeyReleased(evt);
            }
        });

        intA.setText("0");
        intA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                intAFocusLost(evt);
            }
        });
        intA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                intAKeyReleased(evt);
            }
        });

        intH.setText("0");
        intH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                intHFocusLost(evt);
            }
        });
        intH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                intHKeyReleased(evt);
            }
        });

        queH.setText("0");
        queH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                queHFocusLost(evt);
            }
        });
        queH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queHKeyReleased(evt);
            }
        });

        queA.setText("0");
        queA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                queAFocusLost(evt);
            }
        });
        queA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queAKeyReleased(evt);
            }
        });

        queL.setText("0");
        queL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                queLFocusLost(evt);
            }
        });
        queL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queLKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel24.setText("Queries");

        SetParameterBtn.setBackground(new java.awt.Color(102, 255, 102));
        SetParameterBtn.setText("OK");
        SetParameterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetParameterBtnActionPerformed(evt);
            }
        });

        ResetBtn.setBackground(new java.awt.Color(102, 255, 102));
        ResetBtn.setText("Reset");
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 255, 102));
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(SetParameterBtn)
                .addGap(41, 41, 41)
                .addComponent(ResetBtn)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(83, 83, 83))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(86, 86, 86)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(inpL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(outL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(intL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(queL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(37, 37, 37)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel18)
                        .addComponent(inpA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(outA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(intA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(queA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inpH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(outH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(queH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel19))
                    .addContainerGap(54, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResetBtn)
                    .addComponent(SetParameterBtn)
                    .addComponent(jButton1))
                .addGap(29, 29, 29))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(inpH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(outH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(filH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(intH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(queH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(jLabel18)
                                .addComponent(jLabel19))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel20)
                                        .addComponent(inpL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel21)
                                        .addComponent(outL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel22)
                                        .addComponent(filL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel23)
                                        .addComponent(intL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel24)
                                        .addComponent(queL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(inpA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(outA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(filA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(intA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(queA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(89, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inpHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inpHFocusLost
        // TODO add your handling code here:
        String s = inpH.getText();
        if (s.isEmpty()){
            inpH.setText("0");
        }
    }//GEN-LAST:event_inpHFocusLost

    private void inpHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpHKeyReleased
        // TODO add your handling code here:
        String s = inpH.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            inpH.setText(String.valueOf(fpFactors[0][2]));
        }
    }//GEN-LAST:event_inpHKeyReleased

    private void inpAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inpAFocusLost
        // TODO add your handling code here:
        String s = inpA.getText();
        if (s.isEmpty()){
            inpA.setText("0");
        }
    }//GEN-LAST:event_inpAFocusLost

    private void inpAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpAKeyReleased
        // TODO add your handling code here:
        String s = inpA.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            inpA.setText(String.valueOf(fpFactors[0][1]));
        }
    }//GEN-LAST:event_inpAKeyReleased

    private void inpLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inpLFocusLost
        // TODO add your handling code here:
        String s = inpL.getText();
        if (s.isEmpty()){
            inpL.setText("0");
        }
    }//GEN-LAST:event_inpLFocusLost

    private void inpLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpLKeyReleased
        // TODO add your handling code here:
        String s = inpL.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            inpL.setText(String.valueOf(fpFactors[0][0]));
        }
    }//GEN-LAST:event_inpLKeyReleased

    private void outLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outLFocusLost
        // TODO add your handling code here:
        String s = outL.getText();
        if (s.isEmpty()){
            outL.setText("0");
        }
    }//GEN-LAST:event_outLFocusLost

    private void outLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outLKeyReleased
        // TODO add your handling code here:
        String s = outL.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            outL.setText(String.valueOf(fpFactors[1][0]));
        }
    }//GEN-LAST:event_outLKeyReleased

    private void outAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outAFocusLost
        // TODO add your handling code here:
        String s = outA.getText();
        if (s.isEmpty()){
            outA.setText("0");
        }
    }//GEN-LAST:event_outAFocusLost

    private void outAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outAKeyReleased
        // TODO add your handling code here:
        String s = outA.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            outA.setText(String.valueOf(fpFactors[1][1]));
        }
    }//GEN-LAST:event_outAKeyReleased

    private void outHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outHFocusLost
        // TODO add your handling code here:
        String s = outH.getText();
        if (s.isEmpty()){
            outH.setText("0");
        }
    }//GEN-LAST:event_outHFocusLost

    private void outHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outHKeyReleased
        // TODO add your handling code here:
        String s = outH.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            outH.setText(String.valueOf(fpFactors[1][2]));
        }
    }//GEN-LAST:event_outHKeyReleased

    private void filHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filHFocusLost
        // TODO add your handling code here:
        String s = filH.getText();
        if (s.isEmpty()){
            filH.setText("0");
        }
    }//GEN-LAST:event_filHFocusLost

    private void filHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filHKeyReleased
        // TODO add your handling code here:
        String s = filH.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            filH.setText(String.valueOf(fpFactors[2][2]));
        }
    }//GEN-LAST:event_filHKeyReleased

    private void filAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filAFocusLost
        // TODO add your handling code here:
        String s = filA.getText();
        if (s.isEmpty()){
            filA.setText("0");
        }
    }//GEN-LAST:event_filAFocusLost

    private void filAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filAKeyReleased
        // TODO add your handling code here:
        String s = filA.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            filA.setText(String.valueOf(fpFactors[2][1]));
        }
    }//GEN-LAST:event_filAKeyReleased

    private void filLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filLFocusLost
        // TODO add your handling code here:
        String s = filL.getText();
        if (s.isEmpty()){
            filL.setText("0");
        }
    }//GEN-LAST:event_filLFocusLost

    private void filLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filLKeyReleased
        // TODO add your handling code here:
        String s = filL.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            filL.setText(String.valueOf(fpFactors[2][0]));
        }
    }//GEN-LAST:event_filLKeyReleased

    private void intLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intLFocusLost
        // TODO add your handling code here:
        String s = intL.getText();
        if (s.isEmpty()){
            intL.setText("0");
        }
    }//GEN-LAST:event_intLFocusLost

    private void intLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_intLKeyReleased
        // TODO add your handling code here:
        String s = intL.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            intL.setText(String.valueOf(fpFactors[3][0]));
        }
    }//GEN-LAST:event_intLKeyReleased

    private void intAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intAFocusLost
        // TODO add your handling code here:
        String s = intA.getText();
        if (s.isEmpty()){
            intA.setText("0");
        }
    }//GEN-LAST:event_intAFocusLost

    private void intAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_intAKeyReleased
        // TODO add your handling code here:
        String s = intA.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            intA.setText(String.valueOf(fpFactors[3][1]));
        }
    }//GEN-LAST:event_intAKeyReleased

    private void intHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intHFocusLost
        // TODO add your handling code here:
        String s = intH.getText();
        if (s.isEmpty()){
            intH.setText("0");
        }
    }//GEN-LAST:event_intHFocusLost

    private void intHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_intHKeyReleased
        // TODO add your handling code here:
        String s = intH.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            intH.setText(String.valueOf(fpFactors[3][2]));
        }
    }//GEN-LAST:event_intHKeyReleased

    private void queHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queHFocusLost
        // TODO add your handling code here:
        String s = queH.getText();
        if (s.isEmpty()){
            queH.setText("0");
        }
    }//GEN-LAST:event_queHFocusLost

    private void queHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queHKeyReleased
        // TODO add your handling code here:
        String s = queH.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            queH.setText(String.valueOf(fpFactors[4][2]));
        }
    }//GEN-LAST:event_queHKeyReleased

    private void queAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queAFocusLost
        // TODO add your handling code here:
        String s = queA.getText();
        if (s.isEmpty()){
            queA.setText("0");
        }
    }//GEN-LAST:event_queAFocusLost

    private void queAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queAKeyReleased
        // TODO add your handling code here:
        String s = queA.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            queA.setText(String.valueOf(fpFactors[4][1]));
        }
    }//GEN-LAST:event_queAKeyReleased

    private void queLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queLFocusLost
        // TODO add your handling code here:
        String s = queL.getText();
        if (s.isEmpty()){
            queL.setText("0");
        }
    }//GEN-LAST:event_queLFocusLost

    private void queLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queLKeyReleased
        // TODO add your handling code here:
        String s = queL.getText();
        if(!s.isEmpty() && !this.between0and25(s)){
            JOptionPane.showMessageDialog(null, "Please enter an integer between 0 and 25");
            queL.setText(String.valueOf(fpFactors[4][0]));
        }
    }//GEN-LAST:event_queLKeyReleased

    private void SetParameterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetParameterBtnActionPerformed
        // TODO add your handling code here:
        for(int i = 0; i<5; ++i) {
            for (int j = 0; j<3; ++j) {
                fpFactors[i][j] = Integer.valueOf(columns[i][j].getText());
            }
        }
        this.dispose();
    }//GEN-LAST:event_SetParameterBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
        for(int i=0; i<5; ++i) {
            for (int j=0; j<3; ++j) {
                fpFactors[i][j] = defaultFpFactors[i][j];
            }
        }
        setValues();
    }//GEN-LAST:event_ResetBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for(int i=0; i<5; ++i) {
            for(int j=0; j<3; ++j) {
                columns[i][j].setText(String.valueOf(fpFactors[i][j]));
            } 
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FunctionPointsDefault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FunctionPointsDefault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FunctionPointsDefault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FunctionPointsDefault.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FunctionPointsDefault().setVisible(true);
            }
        });
    }
    
    public static boolean containsOnlyNumbers(String str) {
        for (int i = 0; i < str.length(); i++) {
            if (!Character.isDigit(str.charAt(i))) {
                return false;
            }
        }
        return true;
    }
    
    public static boolean between0and25(String str) {
        if (str.isEmpty() || !containsOnlyNumbers(str)) {
            return false;
        }
        int i = Integer.valueOf(str);
        if (i>=0 && i<=25) {
            return true;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ResetBtn;
    private javax.swing.JButton SetParameterBtn;
    private javax.swing.JTextField filA;
    private javax.swing.JTextField filH;
    private javax.swing.JTextField filL;
    private javax.swing.JTextField inpA;
    private javax.swing.JTextField inpH;
    private javax.swing.JTextField inpL;
    private javax.swing.JTextField intA;
    private javax.swing.JTextField intH;
    private javax.swing.JTextField intL;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JTextField outA;
    private javax.swing.JTextField outH;
    private javax.swing.JTextField outL;
    private javax.swing.JTextField queA;
    private javax.swing.JTextField queH;
    private javax.swing.JTextField queL;
    // End of variables declaration//GEN-END:variables
}
